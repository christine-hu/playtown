{"version":3,"file":"phaser-state-transition.js","sources":["../src/transition/transition.js","../src/core/content-snapshot.js","../src/core/slide.js","../src/core/state-manager-start.js","../src/index.js"],"sourcesContent":["/**\n * Transition Class\n * @constructor\n * @name Transition\n * @param {object} game Game instance\n */\nexport class Transition {\n\n    constructor(game) {\n        this.game = game;\n        this.onComplete = null;\n        this._tweens = [];\n    }\n\n    start(target, options) {\n        let prop,\n            _props = options.props,\n            _isIntro = !!options.intro,\n            _tweenTarget,\n            _tweenInstance,\n            _queue = {\n                '_': {}\n            };\n\n        // Store the currentTarget\n        this.currentTarget = target;\n\n        // If we need to compile the output\n        if (typeof _props === 'function') {\n            _props = _props(this.game);\n        }\n\n        // Make sure the proper values for props are there\n        _isIntro && this._prepareTargetForTweening(_props);\n\n        // Parse the options.props and generate the tweens options\n        for (prop in _props) {\n            if (_props.hasOwnProperty(prop)) {\n                // If we need to compile the output\n                if (typeof _props[prop] === 'function') {\n                    _props[prop] = _props[prop](this.game);\n                }\n\n                // If the original value is an object\n                // we need a separate tween\n                if (typeof target[prop] === 'object') {\n                    _queue[prop] = _props[prop];\n                } else {\n                    _queue['_'][prop] = _props[prop];\n                }\n            }\n        }\n\n        for (prop in _queue) {\n            if (_queue.hasOwnProperty(prop)) {\n                _tweenTarget = prop === '_' ? target : target[prop];\n\n                this._tweens.push(\n                    this.game.add.tween(_tweenTarget)\n                        [_isIntro ? 'from' : 'to'](\n                        _queue[prop],\n                        options.duration,\n                        options.ease,\n                        true,\n                        options.delay\n                    )\n                );\n\n                _tweenInstance = this._tweens[this._tweens.length - 1];\n                _tweenInstance.onComplete.addOnce(this._checkForComplete, this);\n                _tweenInstance.onLoop.addOnce(function () {\n                    console.log('progress', this);\n                }, this);\n            }\n        }\n    }\n\n    _checkForComplete(target, tween) {\n        var i = 0,\n            l = this._tweens.length,\n            _currentTween,\n            completed = 0;\n\n        for(; i < l; i++) {\n            _currentTween = this._tweens[i];\n            if (_currentTween.isRunning === false) {\n                completed++;\n                this.game.tweens.remove(tween);\n            }\n        }\n\n        if (completed === l) {\n            this.onComplete && this.onComplete();\n            this.currentTarget.destroy();\n        }\n    }\n\n    _prepareTargetForTweening(props) {\n        if (props.hasOwnProperty('alpha')) {\n            this.currentTarget.alpha = 0;\n        }\n    }\n\n    destroy(target) {\n        target.destroy();\n    }\n\n    stop() {\n        this._active = false;\n        this.update();\n    }\n\n}\n","const PHASER_LEGACY = 248;\n\nconst shouldRenderBasedOnCameraPosition = () => {\n    const currentVersion = parseInt(Phaser.VERSION.replace(/\\./g, ''), 10);\n    return currentVersion > PHASER_LEGACY;\n};\n\nexport class ContentSnapshot extends Phaser.Image {\n\n    /**\n     * Content Snapshot Class\n     * @constructor\n     * @name ContentSnapshot\n     * @param {object} game Game object instance\n     * @param {number} x Offset of x\n     * @param {number} y Offset of y\n     * @param {boolean} noStage Flag do skip rendering the stage for slider\n     * @extend Phaser.Image\n     */\n    constructor(game, x, y, noStage) {\n        const texture = new Phaser.RenderTexture(game, game.width, game.height);\n\n        super(game, x || 0, y || 0, texture);\n\n        if (!noStage) {\n            // Create the game background fill\n            const backgroundFill = new Phaser.Graphics(game, 0, 0);\n            backgroundFill.beginFill(game.stage.backgroundColor);\n            backgroundFill.drawRect(0, 0, game.width, game.height);\n            backgroundFill.endFill();\n\n            // Add the graphicFill object temporary to the stage at the base\n            game.stage.addChildAt(backgroundFill, 0);\n            texture.renderXY(backgroundFill, 0, 0);\n            // After this is rendered to the texture, remove it\n            game.stage.removeChild(backgroundFill);\n        }\n\n        // After 2.4.8 (0,0) it's basically middle\n        if (shouldRenderBasedOnCameraPosition()) {\n            texture.renderXY(game.world, game.camera.position.x * -1, game.camera.position.y * -1);\n        } else {\n            texture.renderXY(game.world, game.width / 2 - game.camera.position.x, game.height / 2 - game.camera.position.y);\n        }\n\n        // Capture all input events\n        this.inputEnabled = true;\n    }\n}\n","import { Transition } from \"../transition/transition\";\nimport { ContentSnapshot } from \"./content-snapshot\";\n\nexport class Slide {\n\n    constructor(game, noStage) {\n        this.game = game;\n        this._contentSnapshot = new ContentSnapshot(game, 0, 0, noStage);\n        this._transition = new Transition(game);\n    }\n\n    go(options) {\n        this.game.stage.addChildAt(this._contentSnapshot, this.game.stage.children.length);\n        this._transition.start(this._contentSnapshot, options);\n    }\n\n}\n","import { Slide } from \"./slide\";\nimport { ContentSnapshot } from \"./content-snapshot\";\n\nconst cleanup = (children) => {\n    let i = 0;\n    let l = children.length;\n\n    for(; i < l; i += 1) {\n        if (children[i] && (children[i] instanceof ContentSnapshot)) {\n            children[i].destroy();\n        }\n    }\n};\n\nexport function stateManagerStart(stateId, slideOutOptions, slideInOptions) {\n    let _slide,\n        _introSlide,\n        _stateManager = this,\n        _state = _stateManager.states[stateId],\n        _cachedStateCreate = _state.create;\n\n    _stateManager.game.stage && cleanup(_stateManager.game.stage.children);\n\n    if (_stateManager.game.isBooted && slideOutOptions) {\n        _slide = new Slide(_stateManager.game, slideOutOptions.noStage);\n\n        (function (_state, slideOutOptions, slideInOptions) {\n            _state.create = function () {\n                _cachedStateCreate.call(this);\n\n                // Slide in intro\n                if (slideInOptions) {\n                    _introSlide = new Slide(_stateManager.game, slideInOptions.noStage);\n                    _stateManager._created = false;\n                    _introSlide.go(slideInOptions);\n\n                    _introSlide._transition.onComplete = function () {\n                        _stateManager._created = true;\n                        cleanup(_stateManager.game.stage.children);\n                    };\n                }\n\n                _slide.go(slideOutOptions);\n\n                // Put the original create back\n                _state.create = _cachedStateCreate;\n            };\n        }(_state, slideOutOptions, slideInOptions));\n    }\n}\n","import { stateManagerStart } from \"./core/state-manager-start\";\n\nconst cachedStart = Phaser.StateManager.prototype.start;\nPhaser.StateManager.prototype.start = function start(stateId, slideInOption, slideOut, ...args) {\n    stateManagerStart.call(this, stateId, slideInOption, slideOut);\n    cachedStart.call(this, stateId, ...args);\n};\n\n/**\n * Creates a transition object\n * @param options\n * @returns {{ease: *, duration: number, intro: boolean, props: {}}}\n */\nexport const createTransition = (options) => {\n    return {\n        ease: options.ease || Phaser.Easing.Exponential.InOut,\n        duration: options.duration || 500,\n        intro: options.intro || false,\n        props: options.props || {}\n    }\n};\n\nexport default class StateTransition extends Phaser.Plugin {}\n\n// Expose the createTransition function\nStateTransition.createTransition = createTransition;"],"names":["Transition","game","onComplete","_tweens","start","target","options","prop","_tweenInstance","_props","props","_isIntro","intro","_queue","currentTarget","this","_prepareTargetForTweening","hasOwnProperty","push","add","tween","duration","ease","delay","length","addOnce","_checkForComplete","onLoop","log","i","l","completed","isRunning","tweens","remove","destroy","alpha","stop","_active","update","const","shouldRenderBasedOnCameraPosition","parseInt","Phaser","VERSION","replace","ContentSnapshot","x","y","noStage","texture","RenderTexture","width","height","super","backgroundFill","Graphics","beginFill","stage","backgroundColor","drawRect","endFill","addChildAt","renderXY","removeChild","world","camera","position","inputEnabled","Image","Slide","_contentSnapshot","_transition","go","children","cleanup","let","cachedStart","StateManager","prototype","stateId","slideInOption","slideOut","slideOutOptions","slideInOptions","_slide","_introSlide","_stateManager","_state","states","_cachedStateCreate","create","isBooted","call","_created","args","StateTransition","Plugin","createTransition","Easing","Exponential","InOut"],"mappings":"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"}